"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const db_1 = require("./db");
const linq = require("lazy-linq-with-types");
class DbServer {
    constructor(tables) {
        this.tables = tables;
        this.__reset();
    }
    __reset() {
        this.db = new db_1.default(this, this.tables);
    }
    open() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.db.open();
            return this.db;
        });
    }
}
exports.DbServer = DbServer;
function table(rows) {
    return linq.asEnumerable(rows);
}
exports.table = table;
function db(tables) {
    return new DbServer(tables);
}
exports.db = db;
//# sourceMappingURL=isotropy-db.js.map